{{>userHeader}}
{{>userNavbar}}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.css">

<style>
    body {
        margin-top: 20px;
        color: #1a202c;
        text-align: left;
        background-color: #e2e8f0;
    }

    .main-body {
        padding: 15px;
    }

    .card {
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, .1), 0 1px 2px 0 rgba(0, 0, 0, .06);
    }

    .card {
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0 solid rgba(0, 0, 0, .125);
        border-radius: .25rem;
    }

    .card-body {
        flex: 1 1 auto;
        min-height: 1px;
        padding: 1rem;
    }

    .gutters-sm {
        margin-right: -8px;
        margin-left: -8px;
    }

    .gutters-sm>.col,
    .gutters-sm>[class*=col-] {
        padding-right: 8px;
        padding-left: 8px;
    }

    .mb-3,
    .my-3 {
        margin-bottom: 1rem !important;
    }

    .bg-gray-300 {
        background-color: #e2e8f0;
    }

    .h-100 {
        height: 100% !important;
    }

    .shadow-none {
        box-shadow: none !important;
    }
</style>

<body>
    <div class="container">
        <div class="main-body" style="margin-top: 100px;">
            <div class="row gutters-sm">
                <div class="col-md-4 mb-3">
                    <div class="card" style="height: 50vh;">
                        <div class="card-body">
                            <div class="d-flex flex-column align-items-center text-center">
                                <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="Admin"
                                    class="rounded-circle" width="150">
                                <div class="mt-3">
                                    <h4>{{profile.name}}</h4>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <form id="profileForm">
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-sm-3">
                                        <h6 class="mb-0">Full Name</h6>
                                    </div>
                                    <div class="col-sm-9 text-secondary">
                                        <input type="text" name="name" value="{{user.name}}" readonly>
                                        <span class="text-danger" id="nameError"></span>
                                    </div>
                                </div>
                                <hr>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <h6 class="mb-0">Email</h6>
                                    </div>
                                    <div class="col-sm-9 text-secondary">
                                        <input type="text" name="email" value="{{user.email}}" readonly>
                                        <span class="text-danger" id="emailError"></span>
                                    </div>
                                </div>
                                <hr>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <h6 class="mb-0">Phone</h6>
                                    </div>
                                    <div class="col-sm-9 text-secondary">
                                        <input type="text" name="phone" value="{{user.phone}}" readonly>
                                        <span class="text-danger" id="phoneError"></span>
                                    </div>
                                </div>
                                <hr>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <a class="btn btn-info" id="editButton">Edit</a>
                                        <a href="/logout" class="btn btn-primary">logout</a>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="row" id="buttonRow" style="display: none;">
                            <div class="col-sm-12">
                                <button type="button" class="btn btn-primary" id="submitButton">Submit</button>
                                <button type="button" class="btn btn-secondary"
                                    onclick="location.reload()">Cancel</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {

        const inputFields = document.querySelectorAll("input[name]");
        const buttonRow = document.getElementById("buttonRow");
        const profileForm = document.getElementById("profileForm");
        const submitButton = document.getElementById("submitButton");

        document.getElementById("editButton").addEventListener("click", function () {
            const isReadOnly = inputFields[0].readOnly;

            inputFields.forEach(function (input) {
                input.readOnly = !isReadOnly;
            });

            buttonRow.style.display = isReadOnly ? "block" : "none";
        });

        submitButton.addEventListener("click", async function () {


            try {
                const formData = new FormData(profileForm);
                const requestData = Object.fromEntries(formData);

                const response = await axios.post("/profile/edit", requestData);
                console.log(response.data);

                if (response.status === 200) {
                    Notification()
                    function Notification() {
                        Swal.fire({
                            position: "center",
                            icon: "success",
                            title: "Profile updated successfully",
                            showConfirmButton: true,
                            confirmButtonColor: "#00A300",
                        });
                    }
                }

            } catch (error) {
                console.log(error)
                if (error.response && error.response.status == 400) {
                    const errors = error.response.data.error;
                    Object.keys(errors).forEach((key) => {
                        let element = document.getElementById(key).textContent = errors[key];
                    });

                }
                else {
                    alertify.alert("Something went wrong, please try again later", function () {
                        alertify.message('OK');
                    });
                }
            }
        });
    });
</script>
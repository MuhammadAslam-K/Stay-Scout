{{>userHeader}}
{{>navBar2}}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.all.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<section style="background-color: #eee;margin-top: 10vh;">
    <div class="container py-5">
        <div class="card">
            <div class="card-body">
                <div class="row d-flex justify-content-center pb-5">
                    <div class="col-md-7 col-xl-5 mb-4 mb-md-0">
                        <div class="py-4 d-flex flex-row">
                            <h5></span><b>Stay Scout</b> |</h5>
                        </div>
                        <div class="pt-2">
                            <form class="pb-3" id="paymentForm">
                                <div class="d-flex flex-row pb-3">
                                    <div class="d-flex align-items-center pe-2">
                                        <input class="form-check-input" type="radio" name="radioNoLabel"
                                            id="radioNoLabel1" value="razorpay" aria-label="..." checked />
                                    </div>
                                    <div class="rounded border d-flex w-100 p-3 align-items-center">
                                        <p class="mb-0">
                                            Razorpay
                                        </p>
                                    </div>
                                </div>

                                <div class="d-flex flex-row">
                                    <div class="d-flex align-items-center pe-2">
                                        <input class="form-check-input" type="radio" onclick="walletPayment()"
                                            name="radioNoLabel" id="radioNoLabel2" value="walletpayment"
                                            aria-label="..." />
                                    </div>
                                    <div class="rounded border d-flex w-100 p-3 align-items-center">
                                        <p class="mb-0">
                                            <i class="fa-solid fa-wallet" style="color: #61646b;"></i>Wallet
                                        </p>
                                        <div class="ms-auto">{{user.wallet.balance}}</div>
                                    </div>
                                </div>
                                <span id="insufficientMessage" class="text-danger" style="font-size: smaller;"></span>

                                <input type="button" value="Proceed to payment" class="btn btn-primary btn-block btn-lg"
                                    onclick="processPayment()" />

                        </div>
                    </div>
                    <div class="col-md-5 col-xl-4 offset-xl-1">

                        <div class="rounded d-flex flex-column p-2" style="background-color: #f8f9fa;">
                            <div class="p-2 me-3">
                                <h4>Booking</h4>
                            </div>
                            <div class="p-2 d-flex">
                                <div class="col-8">Price per Day</div>
                                <input class="ms-auto " value="{{room.price}}" name="roomPrice" readonly></input>
                            </div>
                            <div class="p-2 d-flex">
                                <div class="col-8">No of Days</div>
                                <input class="ms-auto" name="noOfDays" value="{{days}}" readonly></input>
                            </div>
                            {{#if discount}}
                            <div class="p-2 d-flex">
                                <div class="col-8">Total</div>
                                <input class="ms-auto" name="total1" value="{{total}}" readonly></input>
                            </div>
                            <div class="p-2 d-flex">
                                <div class="col-8">Discount</div>
                                <input class="ms-auto" value="{{discount}}%" readonly></input>
                            </div>

                            <div class="border-top px-2 mx-2"></div>
                            <div class="p-2 d-flex pt-3">
                                <div class="col-8"><b>Payable Amount</b></div>
                                <div class="ms-auto"><input class="text-success" id="subTotalValue" name="total"
                                        value="{{amountAfterDiscount}}" readonly></input></div>
                            </div>
                            <span>save:
                                <span class="text-success">Rs:{{discountPrice}}</span>
                            </span>
                            {{/if}}
                            {{#unless discount}}
                            <div class="border-top px-2 mx-2"></div>
                            <div class="p-2 d-flex pt-3">
                                <div class="col-8"><b>Total</b></div>
                                <div class="ms-auto"><input class="text-success" id="subTotalValue" name="total"
                                        value="{{total}}" readonly></input></div>
                            </div>
                            {{/unless}}
                            <button id="applyCouponButton" class="btn btn-success mt-3" onclick="applyCoupen()"
                                style="max-width: 150px;">Apply Coupon</button>

                            <button id="removeCouponButton" class="btn btn-success mt-3" onclick="removeCoupen()"
                                style="max-width: 150px; display: none;">Remove Coupon</button>
                        </div>
                    </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>


{{!-- PAYMENT OPTION --}}
<script>
    function processPayment() {
        const selectedPayment = document.querySelector('input[name="radioNoLabel"]:checked').id;

        if (selectedPayment === 'radioNoLabel1') {
            razorpay();
        } else if (selectedPayment === 'radioNoLabel2') {
            walletPayment();
        } else {
            alert('Please select a payment option.');
        }
    }

    // Rest of your script code...

</script>

{{!-- RAZORPAY --}}
<script>
    async function razorpay(selectedPayment) {

        try {

            const subTotal = Number(document.getElementById('subTotalValue').value);


            var options = {
                "key": "rzp_test_G2uFOSlScJa8TV", // Enter the Key ID generated from the Dashboard
                "amount": subTotal * 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                "currency": "INR",
                "name": "Stay Scout",
                "description": "Booking payment",
                "image": "/public/img/login.jpg",
                "order_id": undefined, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
                "handler": function (response) {

                    payment(selectedPayment)
                    console.log(response);

                },
                "theme": {
                    "color": "#3399cc"
                }
            }

            var rzp1 = new Razorpay(options);

            rzp1.open();

        } catch (error) {
        }
    }
</script>

{{!-- WALLET --}}
<script>
    function walletPayment() {
        try {
            const subTotal = Number(document.getElementById('subTotalValue').value);
            const walletBalance = Number("{{user.wallet.balance}}");

            if (subTotal > walletBalance) {
                document.getElementById("insufficientMessage").innerText = "Insufficient Amount";
                return;
            }
            else {
                payment()
                document.getElementById("insufficientMessage").innerText = "";

            }
        } catch (error) {
            console.log(error)
        }
    }
</script>


{{!-- PAYMENT --}}
<script>
    var coopenCode
    async function payment(selectedPayment) {

        const formElement = document.getElementById('paymentForm');
        const formData = new FormData(formElement);

        try {

            const response = await axios.post(`/payment?code=${coopenCode}`, formData, {
                headers: {
                    'Content-Type': 'application/json'
                }
            })

            if (response.status === 200) {
                window.location.href = '/bookinghistory'
            }

        } catch (error) {
            console.log(error)
            alertify.alert("Something went wrong, please try again later", function () {
                alertify.message('OK');
            });
        }
    }


    //Apply coupen 

    async function applyCoupen() {
        event.preventDefault()
        Swal.fire({
            title: 'Submit coupen code',
            input: 'text',
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            confirmButtonText: 'Apply',
            showLoaderOnConfirm: true,
            preConfirm: async (code) => {
                let response
                try {
                    var totalValue = document.getElementById('subTotalValue').value;
                    coopenCode = code
                    response = await axios.get(`/applycoupen?code=${code}&total=${totalValue}`);

                    if (response.status == 200) {
                        console.log(response)
                        console.log(241)
                        document.getElementById('subTotalValue').value = response.data.amount;
                        const message = response.data.message
                        Swal.fire({
                            icon: 'success',
                            text: message,
                        })


                        document.getElementById('applyCouponButton').style.display = 'none';
                        document.getElementById('removeCouponButton').style.display = 'block';
                    }
                    return response
                } catch (error) {
                    Swal.showValidationMessage(
                        `Request failed: ${error.response.data.error}`
                    );
                }
            },
            allowOutsideClick: () => !Swal.isLoading()
        })

    }

    // RemoveCoupen 
    function removeCoupen() {
        coopenCode = null
        const originalTotalValue = totalValue; // Replace with the original total value
        document.getElementById('subTotalValue').value = originalTotalValue;

        // Show the "Apply Coupon" button and hide the "Remove Coupon" button
        document.getElementById('applyCouponButton').style.display = 'block';
        document.getElementById('removeCouponButton').style.display = 'none';
    }
</script>

{{>userSiteFooter}}
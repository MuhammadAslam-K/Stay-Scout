{{> userHeader}}
{{> adminDashboardSide}}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f8f9fc;
    }

    .container-fluid {
        padding: 20px;
    }

    .navbar {
        background-color: #fff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .topbar {
        align-items: center;
        justify-content: space-between;
    }

    .h1 {
        font-size: 24px;
    }

    .btn {
        font-size: 14px;
        padding: 8px 16px;
    }

    .card {
        border-radius: 8px;
        overflow: hidden;
        transition: all 0.3s;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        padding: 16px;
    }

    .text-xs {
        font-size: 12px;
        text-transform: uppercase;
        opacity: 0.8;
    }

    .text-uppercase {
        text-transform: uppercase;
    }

    .h5 {
        font-size: 18px;
        margin-top: 8px;
    }

    .text-primary {
        color: #3366ff;
    }

    .text-success {
        color: #28a745;
    }

    .text-danger {
        color: #dc3545;
    }

    .text-warning {
        color: #ffc107;
    }
</style>



<body id="page-top">
    <div id="wrapper">
        <div id="content-wrapper" class="d-flex flex-column">
            <div id="content">
                <div class="container-fluid">
                    <nav
                        class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow justify-content-between">
                        <h1 class="h3 mb-0 text-primary font-weight-bold p-3">Dashboard</h1>
                        <a href="/owner/logout" class="btn btn-primary">Logout</a>
                    </nav>

                    <div class="row">
                        <div class="col-xl-4 col-md-6 mb-4">
                            <div class="card border-left-primary  shadow h-100 py-2">
                                <div class="card-body">
                                    <div class="text-xs font-weight-bold text-uppercase">Total Revenue</div>
                                    <div class="h5 mb-0 font-weight-bold">RS:{{revenue}}</div>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-4 col-md-6 mb-4">
                            <div class="card border-left-success  shadow h-100 py-2">
                                <div class="card-body">
                                    <div class="text-xs font-weight-bold text-uppercase">Total Number of Hotels</div>
                                    <div class="h5 mb-0 font-weight-bold">{{hotels}}</div>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-4 col-md-6 mb-4">
                            <div class="card border-left-danger  shadow h-100 py-2">
                                <div class="card-body">
                                    <div class="text-xs font-weight-bold text-uppercase">Total Number of Rooms</div>
                                    <div class="h5 mb-0 font-weight-bold">{{rooms}}</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container d-flex justify-content-center mt-3">
                <div class="btn-group" role="group" aria-label="View Options">
                    <button type="button" class="btn btn-secondary" id="yearBtn">Year</button>
                    <button type="button" class="btn btn-secondary" id="monthBtn">Month</button>
                    <button type="button" class="btn btn-secondary" id="weekBtn">Week</button>
                </div>
            </div>

            <div class="container d-flex justify-content-center mt-5" style="width: 90%;">
                <div style="width: 100%;">
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
            <div class="container-fluid">
                <div class="card shadow mb-4">
                    <div class="card-header py-3">
                        <a href="#" class="m-0 font-weight-bold text-primary">Bookings</a>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>User name</th>
                                        <th>Hotel name</th>
                                        <th>Date</th>
                                        <th>Amount</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {{#each booking}}
                                    <tr>
                                        <td>{{this.user.name}}</td>
                                        <td>{{this.hotel.name}}</td>
                                        <td>
                                            <p>checkIn: {{dateFormat this.checkInDate}}</p>
                                            <p>checkOut: {{dateFormat this.checkOutDate}}</p>
                                        </td>
                                        <td>{{this.paymentAmount}}</td>
                                        <td>
                                            {{#if this.report}}
                                            <p class="text-warning">Submitted a report</p>
                                            {{/if}}
                                            {{#if this.cancel}}
                                            <p class="text-danger">The user Cancelled this booking <i
                                                    class="fa-solid fa-ban" style="color: #eb0f0f;"></i></p>
                                            {{else}}
                                            <p class="text-success">Happy Customer</p>
                                            {{/if}}
                                        </td>
                                    </tr>
                                    {{/each}}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>
</body>
{{>userFooter}}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>



<script src="https://cdn.datatables.net/1.11.1/js/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.11.1/css/jquery.dataTables.min.css">

<script>
    $(document).ready(function () {
        $('#dataTable').DataTable({
            "paging": true, // Enable pagination
            "lengthChange": true, // Enable length change
            "searching": true, // Enable search bar
            "ordering": true, // Enable column ordering
            "info": true, // Show information about current page
            "autoWidth": false // Disable automatic column width calculation
        });
    });
</script>



<script>
    document.addEventListener("DOMContentLoaded", async function () {
        let lineChart;

        const updateChartData = async (view) => {
            try {
                let timeUnit;
                switch (view) {
                    case 'year':
                        timeUnit = '$year';
                        break;
                    case 'month':
                        timeUnit = '$month';
                        break;
                    case 'week':
                        timeUnit = '$week';
                        break;
                    default:
                        timeUnit = '$month';
                        break;
                }

                // Make an asynchronous HTTP GET request to fetch revenue data based on the selected view
                const response = await axios.get(`/owner/revenue?view=${view}`);

                // Extract data from the response
                const data = response.data;

                // Convert revenue data to rupees

                // Update the chart data for line chart
                lineChart.data.labels = data.labels;
                lineChart.data.datasets[0].data = data.revenue;

                // Update the x-axis title based on the selected view
                lineChart.options.scales.x.title.text = `${view.charAt(0).toUpperCase()}${view.slice(1)}`;

                // Re-render the chart
                lineChart.update();

            } catch (error) {
                console.log(error)
            }
        };

        // Add event listeners for the view selection buttons
        document.getElementById('yearBtn').addEventListener('click', () => updateChartData('year'));
        document.getElementById('monthBtn').addEventListener('click', () => updateChartData('month'));
        document.getElementById('weekBtn').addEventListener('click', () => updateChartData('week'));

        // Initially load the chart with the default 'month' view
        await updateChartData('month');

        try {
            // Make an asynchronous HTTP GET request to fetch revenue data
            const response = await axios.get('/owner/revenue');

            const data = response.data;
            const lineChartData = {
                labels: data.labels,
                datasets: [{
                    label: 'Revenue',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1,
                    data: data.revenue,
                    fill: false,
                }]
            };

            // Get the chart context
            const ctx = document.getElementById('revenueChart').getContext('2d');

            // Create the line chart with a logarithmic y-axis scale
            lineChart = new Chart(ctx, {
                type: 'bar',
                data: lineChartData,
                options: {
                    plugins: {
                        title: {
                            display: true,
                            text: 'Revenue Chart',
                            font: {
                                size: 20
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    return '₹' + context.parsed.y.toFixed(2);
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Months and Years',
                                font: {
                                    size: 16
                                }
                            }
                        },
                        y: {
                            type: 'linear',
                            title: {
                                display: true,
                                text: 'Revenue (INR)',
                                font: {
                                    size: 16
                                }
                            },
                            ticks: {
                                callback: function (value) {
                                    return '₹' + value.toLocaleString();
                                }
                            }
                        }
                    }
                }
            });

            // Add interactivity: Update the chart on window resize
            window.addEventListener('resize', function () {
                lineChart.resize();
            });

        } catch (error) {
            // Handle errors in case the data retrieval fails
            console.error('Failed to fetch revenue data:', error);
        }
    });
</script>


<script>
    const errorMessage = "{{errorMessage}}";
    if (errorMessage) {
        alertify.alert(errorMessage, function () {
            alertify.message('OK');
        });
    }
</script>
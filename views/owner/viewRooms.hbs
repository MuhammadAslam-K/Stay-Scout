{{> userHeader}}
{{> adminDashboardSide}}

<body id="page-top">
    <div id="wrapper">
        <div id="content-wrapper" class="d-flex flex-column">
            <div id="content">
                <nav
                    class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow justify-content-between">
                </nav>
                <div class="container">
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <a class="m-0 font-weight-bold text-primary">Rooms</a>
                            <a class="ms-4 font-weight-bold text-primary" onclick="addRooms()">Add Room</a>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                    <thead>
                                        <th>Is Available</th>
                                        <th>Room No:</th>
                                        <th>Bookings</th>

                                    </thead>
                                    <tbody>
                                        {{#each rooms.availableRooms}}
                                        <tr>
                                            {{#if this.is_Available}}
                                            <td>
                                                <div id="availabilityButton{{this.roomNo}}">
                                                    <button class="btn btn-primary"
                                                        onclick="toggleAvailability('{{this.roomNo}}', false)">Available</button>
                                                </div>
                                            </td>
                                            {{else}}
                                            <td>
                                                <div id="availabilityButton{{this.roomNo}}">
                                                    <button class="btn btn-warning"
                                                        onclick="toggleAvailability('{{this.roomNo}}', true)">Not
                                                        Available</button>
                                                </div>
                                            </td>
                                            {{/if}}
                                            <td>{{this.roomNo}}</td>

                                            <td><a href="/owner/status/rooms?no={{this.roomNo}}"
                                                    class="btn  btn-primary">status</a></td>
                                        </tr>
                                        {{/each}}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                </div>

            </div>

        </div>
    </div>
</body>

</html>


{{>userFooter}}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.1/js/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.11.1/css/jquery.dataTables.min.css">

<script>
    $(document).ready(function () {
        $('#dataTable').DataTable();
    });

    const errorMessage = "{{errorMessage}}";
    if (errorMessage) {
        alertify.alert(errorMessage, function () {
            alertify.message('OK');
        });
    }

    function toggleAvailability(roomNo, availabilityStatus) {
        event.preventDefault();
        console.log(roomNo)
        axios.post('/owner/room/block?no=' + roomNo, {
            availability: availabilityStatus
        })
            .then(function (response) {
                const availabilityButton = document.getElementById('availabilityButton' + roomNo);
                if (availabilityStatus) {
                    availabilityButton.innerHTML = '<button class="btn btn-primary" onclick="toggleAvailability(\'' + roomNo + '\', false)">Available</button>';
                } else {
                    availabilityButton.innerHTML = '<button class="btn btn-warning" onclick="toggleAvailability(\'' + roomNo + '\', true)">Not Available</button>';
                }
            })
            .catch(function (error) {
                alertify.alert("Something went wrong", function () {
                    alertify.message('OK');
                });
                console.log(error);
            });
    }

    function addRooms() {
        Swal.fire({
            title: 'Enter the No of Rooms',
            input: 'tel',
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            confirmButtonText: 'ok',
            showLoaderOnConfirm: true,
            preConfirm: async (input) => {
                if (isValidDiscountInput(input)) {
                    try {
                        const response = axios.get(`/owner/addroom/${input}`);
                        if (response.status == 200) {
                        }
                        return response.data;
                    } catch (error) {
                        Swal.showValidationMessage(`Request failed: ${error.message}`);
                    }
                }
                else {
                    Swal.showValidationMessage('Invalid input. Please enter a number between 1 and 20.');
                }
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    icon: "success",
                    title: 'Room added successfully',
                    confirmButtonColor: "#00A300",

                });
                window.location.reload()
            }
        });

    }
    function isValidDiscountInput(inputValue) {
        const regexPattern = /^(?:[1-9]|1[0-9]|20)$/;
        return regexPattern.test(inputValue);
    }
</script>
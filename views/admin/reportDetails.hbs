{{>userHeader}}
{{>dashbordSide}}


<style>
    .image-preview-container {
        display: flex;
        margin-bottom: 20px;
        width: 200px;
        max-width: 400px;
        display: flex;
        flex-wrap: wrap;
        justify-content: flex-start;
        margin-bottom: 20px;
    }

    .image-preview {
        height: 200px;
        width: 300px;
        margin-bottom: 10px;
        margin-left: 2rem;
        border-radius: 5px;
        object-fit: cover;
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.3);
        margin: 0 10px 10px 0;
    }
</style>


<div id="content-wrapper" class="justify-content-center m-5">
    <div id="content">
        <input type="text" name="bookingId" value="{{report.booking._id}}" style="display: none;">
        <input type="text" name="reportId" value="{{report._id}}" style="display: none;">
        <div class="form-row m-4">
            <div class="form-group col-md-6">
                <label>User Name</label>
                <input type="text" class="form-control" value="{{report.user.name}}" readonly>
            </div>

            <div class="form-group col-md-3">
                <label>Amount</label>
                <input type="tel" class="form-control" value="{{report.booking.paymentAmount}}" readonly>
            </div>
            <div class="form-group col-md-3">
                <label>Payment Method</label>
                <input type="text" class="form-control" value="{{report.booking.paymentMethod}}" readonly>
                <span id="childrentsError" class="text-danger error-msg"></span>
            </div>
        </div>

        <div class="form-row m-4">
            <div class="form-group col-md-4">
                <label>Hotel name</label>
                <input type="text" class="form-control" value="{{hotel.name}}" readonly>
            </div>
            <div class="form-group col-md-4">
                <label>Checkin date</label>
                <input type="text" class="form-control" value="{{report.booking.checkInDate}}" readonly>
            </div>
            <div class="form-group col-md-4">
                <label>Checkout date</label>
                <input type="text" class="form-control" value="{{report.booking.checkOutDate}}" readonly>
            </div>
        </div>
        <div class="form-row m-4">
            <div class="form-group col-md-6">
                <label for="report">Report</label>
                <textarea id="description" class="form-control" style="height: 150px; resize: vertical;"
                    readonly>{{report.report}}</textarea>
            </div>
            <div class="form-group col-md-6 d-flex  align-items-end">
                {{!-- <button class="btn btn-success">Resolve</button> --}}
                <button class="btn btn-success" id="resolveBtn">Resolve</button>
                <div class="m-2"></div>
                <button class="btn btn-danger" id="rejectBtn">Reject</button>
                {{!-- <button class="btn btn-danger">Reject</button> --}}
            </div>

        </div>

    </div>
</div>

{{>userFooter}}

<!-- Add your Axios library (if not already included) -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>
    // Add event listener to the "Resolve" button
    document.getElementById('resolveBtn').addEventListener('click', function () {
        sendStatusToServer('Resolved');
    });

    // Add event listener to the "Reject" button
    document.getElementById('rejectBtn').addEventListener('click', function () {
        sendStatusToServer('Rejected');
    });

    async function sendStatusToServer(status) {
        const bookingId = document.querySelector('input[name="bookingId"]').value;
        const reportId = document.querySelector('input[name="reportId"]').value;

        const data = {
            bookingId,
            reportId,
            status,
        };

        try {
            const response = await axios.post('/admin/report/status', data, {
                headers: {
                    'Content-Type': 'application/json'
                }
            })

            if (response.status === 200) {
                Swal.fire({
                    position: "center",
                    icon: "success",
                    title: "Updated the response successfully",
                    showConfirmButton: true,
                    confirmButtonColor: "#00A300",
                });
            }
        } catch (error) {
            console.log(error)
            alertify.alert("Something went wrong, please try again later", function () {
                alertify.message('OK');
            });
        }
    }

</script>